unit mnNetworkTestCase;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework;

type
  TmnNetworkTestCase = class(TTestCase)
  strict private
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure testHTTPGet;
    procedure testHTTPPost;
    procedure testThreadHTTPGet;
    procedure testThreadHTTPPost;
  end;

implementation

uses mnNetwork, UTestConsts, mnDebug, mnDialog, SysUtils;

{ TmnNetworkTestCase }

procedure TmnNetworkTestCase.SetUp;
begin
end;

procedure TmnNetworkTestCase.TearDown;
begin
end;

procedure TmnNetworkTestCase.testHTTPGet;
begin
  CheckEquals(mnHTTPGet(Url_Get+Params_Get), Page_Get);

  try
    mnHTTPGet(Url_Fake, 3, 500);
    mnNeverGoesHere;
  except
    on E: Exception do
      CheckEquals(E.Message, Page_Not_Found);
  end;
end;

procedure TmnNetworkTestCase.testHTTPPost;
begin
  CheckEquals(mnHTTPPost(Url_Post, Params_Post), Page_Post);

  try
    mnHTTPPost(Url_Fake, Params_Post, 3, 500);
    mnNeverGoesHere;
  except
    on E: Exception do
      CheckEquals(E.Message, Page_Not_Found);
  end;
end;

procedure TmnNetworkTestCase.testThreadHTTPGet;
begin
  CheckEquals(mnThreadHTTPGet(Url_Get+Params_Get), Page_Get);

  try
    mnThreadHTTPGet(Url_Fake, 3, 500);
    mnNeverGoesHere;
  except
    on E: Exception do
      CheckEquals(E.Message, Page_Not_Found);
  end;
end;

procedure TmnNetworkTestCase.testThreadHTTPPost;
begin
  CheckEquals(mnThreadHTTPPost(Url_Post, Params_Post), Page_Post);

  try
    mnThreadHTTPPost(Url_Fake, Params_Post, 3, 500);
    mnNeverGoesHere;
  except
    on E: Exception do
      CheckEquals(E.Message, Page_Not_Found);
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TmnNetworkTestCase.Suite);
end.