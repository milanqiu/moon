unit mnWebBrowserTestCase;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, mnWebBrowser, Forms;

type
  TmnWebBrowserTestCase = class(TTestCase)
  strict private
    Form: TForm;
    WebBrowser: mnTWebBrowser;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure testIdle;
    procedure testWaitForIdle;
    procedure testGet;
    procedure testPost;
    procedure testSetBlank;
    procedure testSetContent;
    procedure testGetSeries;
    procedure testGetDocument;
  end;

implementation

uses SysUtils, UTestConsts, mnSystem, mnHTML, Variants, MSHTML;

{ TmnWebBrowserTestCase }

procedure TmnWebBrowserTestCase.SetUp;
begin
  Form := TForm.Create(Application);
  WebBrowser := mnTWebBrowser.Create(Form);
  WebBrowser.SetParent(Form);
  Form.Show;
end;

procedure TmnWebBrowserTestCase.TearDown;
begin
  Form.Close;
  WebBrowser.Free;
  Form.Free;
end;

procedure TmnWebBrowserTestCase.testIdle;
var
  StartTime: TDateTime;
begin
  Check(WebBrowser.Idle);
  WebBrowser.Get('about:blank');
  CheckFalse(WebBrowser.Idle);
  StartTime := Now;
  repeat
    Application.ProcessMessages;
  until Now > StartTime + 3/3600/24;
  Check(WebBrowser.Idle);
end;

procedure TmnWebBrowserTestCase.testWaitForIdle;
begin
  Check(WebBrowser.Idle);
  WebBrowser.Get('about:blank');
  CheckFalse(WebBrowser.Idle);
  WebBrowser.WaitForIdle;
  Check(WebBrowser.Idle);
end;

procedure TmnWebBrowserTestCase.testGet;
begin
  WebBrowser.Get(Url_Get+Params_Get);
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, Content_Get + #$AB#$AB#$AB#$AB#$AB#$AB#$AB#$AB);
end;

procedure TmnWebBrowserTestCase.testPost;
begin
  ppStrs.Text := Params_Post;
  WebBrowser.Post(Url_Post, ppStrs);
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, Content_Post + #$AB#$AB#$AB#$AB#$AB#$AB#$AB#$AB);
end;

procedure TmnWebBrowserTestCase.testSetBlank;
begin
  WebBrowser.SetBlank;
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, #$FF#$FE#$3C);
end;

procedure TmnWebBrowserTestCase.testSetContent;
begin
  WebBrowser.SetBlank;
  WebBrowser.SetContent(mnHTMLSimplePage('Title', 'Body'));
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, mnHTMLSimplePage('Title', 'Body'));
end;

procedure TmnWebBrowserTestCase.testGetSeries;
begin
  WebBrowser.SetBlank;
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, #$FF#$FE#$3C);
  CheckEquals(WebBrowser.GetBodyHTML, '');
  CheckEquals(WebBrowser.GetBodyText, '');

  WebBrowser.SetContent(mnHTMLSimplePage('Title', 'Body'));
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, mnHTMLSimplePage('Title', 'Body'));
  CheckEquals(WebBrowser.GetBodyHTML, 'Body ');
  CheckEquals(WebBrowser.GetBodyText, 'Body ');

  WebBrowser.Get(Url_Get+Params_Get);
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, Content_Get + #$AB#$AB#$AB#$AB#$AB#$AB#$AB#$AB);
  CheckEquals(WebBrowser.GetBodyHTML, 'Method: get<BR>Param1: a1<BR>Param2: 가');
  CheckEquals(WebBrowser.GetBodyText, 'Method: get' + mnNewLine + 'Param1: a1' + mnNewLine + 'Param2: 가');

  ppStrs.Text := Params_Post;
  WebBrowser.Post(Url_Post, ppStrs);
  WebBrowser.WaitForIdle;
  CheckEquals(WebBrowser.GetHTML, Content_Post + #$AB#$AB#$AB#$AB#$AB#$AB#$AB#$AB);
  CheckEquals(WebBrowser.GetBodyHTML, 'Method: post<BR>Param1: a1<BR>Param2: 가');
  CheckEquals(WebBrowser.GetBodyText, 'Method: post' + mnNewLine + 'Param1: a1' + mnNewLine + 'Param2: 가');
end;

procedure TmnWebBrowserTestCase.testGetDocument;
begin
  WebBrowser.Get(Url_Get+Params_Get);
  WebBrowser.WaitForIdle;

  // notice all HTML labels are uppercased

  CheckEquals(WebBrowser.GetDocument.all.length, 6);
  CheckEquals((WebBrowser.GetDocument.all.item(0, EmptyParam) as IHTMLElement).outerHTML,
    '<HTML><HEAD></HEAD>'+mnNewLine+'<BODY>Method: get<BR>Param1: a1<BR>Param2: 가</BODY></HTML>');
  CheckEquals((WebBrowser.GetDocument.all.item(1, EmptyParam) as IHTMLElement).outerHTML, '<HEAD></HEAD>');
  CheckEquals((WebBrowser.GetDocument.all.item(2, EmptyParam) as IHTMLElement).outerHTML, '');
  CheckEquals((WebBrowser.GetDocument.all.item(3, EmptyParam) as IHTMLElement).outerHTML, mnNewLine+'<BODY>Method: get<BR>Param1: a1<BR>Param2: 가</BODY>');
  CheckEquals((WebBrowser.GetDocument.all.item(4, EmptyParam) as IHTMLElement).outerHTML, '<BR>');
  CheckEquals((WebBrowser.GetDocument.all.item(5, EmptyParam) as IHTMLElement).outerHTML, '<BR>');

  CheckEquals(WebBrowser.GetDocument.title, '');
  CheckEquals(WebBrowser.GetDocument.body.outerHTML, mnNewLine+'<BODY>Method: get<BR>Param1: a1<BR>Param2: 가</BODY>');
  CheckEquals(WebBrowser.GetDocument.body.outerText, 'Method: get' + mnNewLine + 'Param1: a1' + mnNewLine + 'Param2: 가');
  CheckEquals(WebBrowser.GetDocument.body.outerText, WebBrowser.GetDocument.body.innerText);

  CheckEquals((WebBrowser.GetDocument.activeElement as IHTMLElement2).getElementsByTagName('BR').length, 2);

  CheckEquals(WebBrowser.GetDocument.url,    Url_Get+Params_Get);
  CheckEquals(WebBrowser.GetDocument.domain, 'test.milanqiu.net');

  CheckEquals(WebBrowser.GetDocument.toString, '[object]');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TmnWebBrowserTestCase.Suite);
end.